{
  "openapi": "3.1.0",
  "info": {
    "title": "Trust Engine API",
    "description": "API for the Trust Engine protocol, providing services for file registration, verification, and wallet management.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://core-api-server.onrender.com"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Checks the operational status of the Trust Engine API server.",
        "tags": ["Health"],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl -X GET 'https://core-api-server.onrender.com/health'"
          },
          {
            "lang": "JavaScript",
            "source": "const response = await fetch('https://core-api-server.onrender.com/health', {\n  method: 'GET'\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nresponse = requests.get('https://core-api-server.onrender.com/health')\ndata = response.json()\nprint(data)"
          }
        ],
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "All systems operational!"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-15T10:30:45.123Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/create-wallet": {
      "post": {
        "summary": "Create Wallet",
        "description": "Create a new wallet for a user.",
        "tags": ["Wallet"],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl -X POST 'https://core-api-server.onrender.com/create-wallet' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"userID\": \"user-12345\"\n  }'"
          },
          {
            "lang": "JavaScript",
            "source": "const response = await fetch('https://core-api-server.onrender.com/create-wallet', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    userID: 'user-12345'\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nresponse = requests.post(\n    'https://core-api-server.onrender.com/create-wallet',\n    headers={'Content-Type': 'application/json'},\n    json={\n        'userID': 'user-12345'\n    }\n)\n\ndata = response.json()\nprint(data)"
          }
        ]
      }
    },
    "/register": {
      "post": {
        "summary": "Register File",
        "description": "Register a new file using its content hash and metadata.",
        "tags": ["File Operations"],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl -X POST 'https://core-api-server.onrender.com/register' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"contentTitle\": \"My Important Document\",\n    \"walletAddress\": \"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\",\n    \"walletType\": \"crossmint\",\n    \"contentHash\": \"a7b2c3d4e5f6789abcdef0123456789abcdef0123456789abcdef0123456789\",\n }'"
          },
          {
            "lang": "JavaScript",
            "source": "const response = await fetch('https://core-api-server.onrender.com/register', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    contentTitle: 'My Important Document',\n    walletAddress: '9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM',\n    walletType: 'crossmint',\n    contentHash: 'a7b2c3d4e5f6789abcdef0123456789abcdef0123456789abcdef0123456789'\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nresponse = requests.post(\n    'https://core-api-server.onrender.com/register',\n    headers={'Content-Type': 'application/json'},\n    json={\n        'contentTitle': 'My Important Document',\n        'walletAddress': '9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM',\n        'walletType': 'crossmint',\n        'contentHash': 'a7b2c3d4e5f6789abcdef0123456789abcdef0123456789abcdef0123456789'\n   }\n)\n\ndata = response.json()\nprint(data)"
          },
          {
            "lang": "PHP",
            "source": "<?php\n\n$url = 'https://core-api-server.onrender.com/register';\n$data = json_encode([\n    'contentTitle' => 'My Important Document',\n    'walletAddress' => '9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM',\n    'walletType' => 'crossmint',\n    'contentHash' => 'a7b2c3d4e5f6789abcdef0123456789abcdef0123456789abcdef0123456789'\n]);\n\n$options = [\n    'http' => [\n        'header' => 'Content-Type: application/json',\n        'method' => 'POST',\n        'content' => $data,\n    ],\n];\n\n$context = stream_context_create($options);\n$result = file_get_contents($url, false, $context);\n$data = json_decode($result, true);\n\nprint_r($data);\n?>"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\turl := \"https://core-api-server.onrender.com/register\"\n\tmethod := \"POST\"\n\n\tclient := &http.Client {}\n\treq, err := http.NewRequest(method, url, nil)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\n\tres, err := client.Do(req)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tdefer res.Body.Close()\n\n\tbody, err := ioutil.ReadAll(res.Body)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tvar response map[string]interface{}\n\n\terr = json.Unmarshal(body, &response)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tjson.NewEncoder(os.Stdout).Encode(response)\n}"
          },
          {
            "lang": "Java",
            "source": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\npublic class RegisterFile {\n    public static void main(String[] args) {\n        try {\n            URL url = new URL(\"https://core-api-server.onrender.com/register\");\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n            conn.setRequestMethod(\"POST\");\n            conn.setRequestProperty(\"Content-Type\", \"application/json\");\n            conn.setDoOutput(true);\n\n            String jsonInputString = \"{\\\"contentTitle\\\": \\\"My Important Document\\\", \\\"walletAddress\\\": \\\"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\\\", \\\"walletType\\\": \\\"crossmint\\\", \\\"contentHash\\\": \\\"a7b2c3d4e5f6789abcdef0123456789abcdef0123456789abcdef0123456789\\\"}\";\n            try(OutputStream os = conn.getOutputStream()) {\n                byte[] input = jsonInputString.getBytes(\"utf-8\");\n                os.write(input, 0, input.length);\n            }\n\n            try(BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream(), \"utf-8\"))) {\n                StringBuilder response = new StringBuilder();\n                String responseLine = null;\n                while ((responseLine = br.readLine()) != null) {\n                    response.append(responseLine.trim());\n                }\n                System.out.println(response.toString());\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}"
          }
        ]
      }
    },
    "/search": {
      "post": {
        "summary": "Search",
        "description": "Search for a file by its content hash.",
        "tags": ["File Operations"],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl -X POST 'https://core-api-server.onrender.com/search' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"contentHash\": \"a7b2c3d4e5f6789abcdef0123456789abcdef0123456789abcdef0123456789\"\n  }'"
          },
          {
            "lang": "JavaScript",
            "source": "const response = await fetch('https://core-api-server.onrender.com/search', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    contentHash: 'a7b2c3d4e5f6789abcdef0123456789abcdef0123456789abcdef0123456789'\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nresponse = requests.post(\n    'https://core-api-server.onrender.com/search',\n    headers={'Content-Type': 'application/json'},\n    json={\n        'contentHash': 'a7b2c3d4e5f6789abcdef0123456789abcdef0123456789abcdef0123456789'\n    }\n)\n\ndata = response.json()\nprint(data)"
          }
        ]
      }
    },
    "/find-wallet": {
      "get": {
        "summary": "Find Wallet",
        "description": "Find a wallet by user ID or wallet address.",
        "tags": ["Wallet"],
       "x-code-samples": [
          {
            "lang": "cURL",
            "source": "# Example 1: Find by userID\ncurl -X GET 'https://core-api-server.onrender.com/find-wallet?userID=user-12345'\n\n# Example 2: Find by wallet address\ncurl -X GET 'https://core-api-server.onrender.com/find-wallet?walletAddress=9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM'"
          },
          {
            "lang": "JavaScript", 
            "source": "// Example 1: Find by userID\nconst response1 = await fetch('https://core-api-server.onrender.com/find-wallet?userID=user-12345', {\n  method: 'GET'\n});\n\n// Example 2: Find by wallet address\nconst response2 = await fetch('https://core-api-server.onrender.com/find-wallet?walletAddress=9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM', {\n  method: 'GET'\n});"
          },
          {
            "lang": "Python",
            "source": "import requests\n\n# Example 1: Find by userID\nresponse1 = requests.get(\n    'https://core-api-server.onrender.com/find-wallet',\n    params={'userID': 'user-12345'}\n)\n\n# Example 2: Find by wallet address\nresponse2 = requests.get(\n    'https://core-api-server.onrender.com/find-wallet',\n    params={'walletAddress': '9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM'}\n)"
          }
        ]
      }
    },
    "/link-wallet": {
      "post": {
        "summary": "Link Wallet",
        "description": "Link a wallet to a user ID.",
        "tags": ["Wallet"],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl -X POST 'https://core-api-server.onrender.com/link-wallet' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"userID\": \"user-12345\",\n    \"walletAddress\": \"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\"\n  }'"
          },
          {
            "lang": "JavaScript",
            "source": "const response = await fetch('https://core-api-server.onrender.com/link-wallet', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    userID: 'user-12345',\n    walletAddress: '9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM'\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nresponse = requests.post(\n    'https://core-api-server.onrender.com/link-wallet',\n    headers={'Content-Type': 'application/json'},\n    json={\n        'userID': 'user-12345',\n        'walletAddress': '9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM'\n    }\n)\n\ndata = response.json()\nprint(data)"
          }
        ]
      }
    },
    "/transactions": {
      "post": {
        "summary": "Submit Transaction",
        "description": "Submit a pre-signed transaction.",
        "tags": ["Transactions"],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl -X POST 'https://core-api-server.onrender.com/transactions' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"transaction\": \"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEDArczbMia1tLmq2poQiNXU2xnkV4S4gK9bS6Kz...\"\n  }'"
          },
          {
            "lang": "JavaScript",
            "source": "const response = await fetch('https://core-api-server.onrender.com/transactions', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    transaction: 'AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEDArczbMia1tLmq2poQiNXU2xnkV4S4gK9bS6Kz...'\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nresponse = requests.post(\n    'https://core-api-server.onrender.com/transactions',\n    headers={'Content-Type': 'application/json'},\n    json={\n        'transaction': 'AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEDArczbMia1tLmq2poQiNXU2xnkV4S4gK9bS6Kz...'\n    }\n)\n\ndata = response.json()\nprint(data)"
          }
        ]
      }
    },
    "/validators/data": {
      "post": {
        "summary": "Get Validator Data",
        "description": "Get validator data for a wallet address.",
        "tags": ["Validators"],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl -X POST 'https://core-api-server.onrender.com/validators/data' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"walletAddress\": \"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\"\n  }'"
          },
          {
            "lang": "JavaScript",
            "source": "const response = await fetch('https://core-api-server.onrender.com/validators/data', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    walletAddress: '9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM'\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nresponse = requests.post(\n    'https://core-api-server.onrender.com/validators/data',\n    headers={'Content-Type': 'application/json'},\n    json={\n        'walletAddress': '9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM'\n    }\n)\n\ndata = response.json()\nprint(data)"
          }
        ]
      }
    }
  },
  "components": {
    "responses": {
      "ErrorResponse": {
        "description": "An error response.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      }
    },
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "details": {
            "type": "object"
          }
        }
      },
      "CreateWalletRequest": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "string",
            "description": "Unique identifier for the user",
            "example": "user_12345"
          }
        },
        "required": ["userID"]
      },
      "CreateWalletResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Success! Your Crossmint wallet has been created and linked to your user ID."
          },
          "details": {
            "type": "object",
            "properties": {
              "walletAddress": {
                "type": "string",
                "example": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
              },
              "chain": {
                "type": "string",
                "example": "solana"
              },
              "transactionSignature": {
                "type": "string",
                "example": "2nBhEBYYvfaAe16UMNqRHre4YNSskvuYgx3M6E4JP1oDYvZEJHvoPzyUwkoB6VRYuVEMarHNr9RxJWnyb8FnFnBg"
              },
              "explorerUrl": {
                "type": "string",
                "example": "https://explorer.solana.com/tx/2nBhEBYYvfaAe16UMNqRHre4YNSskvuYgx3M6E4JP1oDYvZEJHvoPzyUwkoB6VRYuVEMarHNr9RxJWnyb8FnFnBg?cluster=devnet"
              }
            }
          }
        }
      },
      "SearchRequest": {
        "type": "object",
        "properties": {
          "contentHash": {
            "type": "string",
            "description": "SHA256 hash of the file content (hex encoded)",
            "example": "abc123def456789..."
          }
        },
        "required": ["contentHash"]
      },
      "SearchResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Found 1 record(s) for your file on the blockchain."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchRecord"
            }
          }
        }
      },
      "SearchRecord": {
        "type": "object",
        "properties": {
          "contentHash": {
            "type": "string"
          },
          "pdaAddress": {
            "type": "string"
          },
          "onChainRegistration": {
            "type": "object"
          },
          "userID": {
            "type": "string"
          }
        }
      },
      "RegisterFileRequest": {
        "type": "object",
        "properties": {
          "contentTitle": {
            "type": "string",
            "description": "Title for the content being registered",
            "example": "My Important Document"
          },
          "walletAddress": {
            "type": "string",
            "description": "User's public Solana wallet address",
            "example": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
          },
          "walletType": {
            "type": "string",
            "description": "Wallet provider type",
            "enum": ["standard", "crossmint"],
            "example": "crossmint"
          },
          "contentHash": {
            "type": "string",
            "description": "SHA256 hash of the file content (hex encoded)",
            "example": "a7b2c3d4e5f6789abcdef0123456789abcdef0123456789abcdef0123456789"
          },
          "fileMetadata": {
            "type": "object",
            "description": "Metadata about the file being registered",
            "properties": {
              "fileName": {
                "type": "string",
                "example": "document.pdf"
              },
              "fileSize": {
                "type": "number",
                "example": 245760
              },
              "mimeType": {
                "type": "string",
                "example": "application/pdf"
              }
            }
          },
          "metadata": {
            "type": "string",
            "description": "Additional metadata about the file",
            "example": "Important legal document for verification"
          },
          "claimHash": {
            "type": "string",
            "description": "SHA256 hash for secret verification (hex encoded)",
            "example": "110f211f367825834d6897c0efd0b05b35adb744a5836dcd478d384d2a938f15"
          }
        },
        "required": ["contentTitle", "walletAddress", "walletType", "contentHash"]
      },
      "RegisterFileStandardResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "✅ TRANSACTION READY ✅"
          },
          "details": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "example": "Requires Client Signature"
              },
              "ipfsCid": {
                "type": "string",
                "example": "QmExampleCidForYourFileMetadata..."
              },
              "contentRegistrationPDA": {
                "type": "string",
                "example": "8qbHbw2BbbTHBW1sbeqakYXVKRQM8Ne7pLK7m6CVfeR"
              },
              "transaction": {
                "type": "string",
                "example": "AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEDArczbMia1tLmq2poQiNXU2xnkV4S4gK9bS6Kz..."
              }
            }
          }
        }
      },
      "RegisterFileCrossmintResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "✅ SUBMISSION ACCEPTED ✅"
          },
          "details": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "example": "Pending Verification"
              },
              "crossmintTransactionId": {
                "type": "string",
                "example": "2nBhEBYYvfaAe16UMNqRHre4YNSskvuYgx3M6E4JP1oDYvZEJHvoPzyUwkoB6VRYuVEMarHNr9RxJWnyb8FnFnBg"
              },
              "contentRegistrationPDA": {
                "type": "string",
                "example": "8qbHbw2BbbTHBW1sbeqakYXVKRQM8Ne7pLK7m6CVfeR"
              },
              "ipfsCid": {
                "type": "string",
                "example": "QmExampleCidForYourFileMetadata..."
              },
              "solanaExplorer": {
                "type": "string",
                "example": "https://explorer.solana.com/tx/<TRANSACTION_ID>?cluster=devnet"
              }
            }
          }
        }
      },
      "FindWalletRequest": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "string",
            "description": "User ID to search for (provide either this OR walletAddress)",
            "example": "user_12345"
          },
          "walletAddress": {
            "type": "string",
            "description": "Wallet address to search for (provide either this OR userID)",
            "example": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
          }
        }
      },
      "LinkWalletRequest": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "string",
            "example": "user_12345"
          },
          "walletAddress": {
            "type": "string",
            "example": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
          }
        },
        "required": ["userID", "walletAddress"]
      },
      "LinkWalletResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Success! The wallet address has been linked to the user ID."
          },
          "details": {
            "type": "object",
            "properties": {
              "userID": {
                "type": "string",
                "example": "user_12345"
              },
              "walletAddress": {
                "type": "string",
                "example": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
              },
              "transactionSignature": {
                "type": "string",
                "example": "2nBhEBYYvfaAe16UMNqRHre4YNSskvuYgx3M6E4JP1oDYvZEJHvoPzyUwkoB6VRYuVEMarHNr9RxJWnyb8FnFnBg"
              },
              "explorerUrl": {
                "type": "string",
                "example": "https://explorer.solana.com/tx/2nBhEBYYvfaAe16UMNqRHre4YNSskvuYgx3M6E4JP1oDYvZEJHvoPzyUwkoB6VRYuVEMarHNr9RxJWnyb8FnFnBg?cluster=devnet"
              }
            }
          }
        }
      },
      "SubmitTransactionRequest": {
        "type": "object",
        "properties": {
          "transaction": {
            "type": "string",
            "description": "Base64 encoded transaction",
            "example": "AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEDArczbMia1tLmq2poQiNXU2xnkV4S4gK9bS6Kz..."
          }
        },
        "required": ["transaction"]
      },
      "SubmitTransactionResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Transaction submitted and confirmed successfully!"
          },
          "details": {
            "type": "object",
            "properties": {
              "transactionSignature": {
                "type": "string",
                "example": "5VfYmGjjVJ9wbpjb9YwHUAAABBBCCCDDDEEEFFFGGGHHHIII123456789abcdef"
              },
              "explorerUrl": {
                "type": "string",
                "example": "https://explorer.solana.com/tx/5VfYmGjjVJ9wbpjb9YwHUAAABBBCCCDDDEEEFFFGGGHHHIII123456789abcdef?cluster=devnet"
              }
            }
          }
        }
      },
      "FindWalletResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "searchType": {
                "type": "string"
              },
              "searchValue": {
                "type": "string"
              },
              "relation": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "walletAddress": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string"
                  },
                  "relationPDA": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "Health": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "All systems operational!"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:45.123Z"
          }
        }
      },
      "WalletBalanceRequest": {
        "type": "object",
        "properties": {
          "walletAddress": {
            "type": "string",
            "description": "Wallet address to check balance for",
            "example": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
          }
        },
        "required": ["walletAddress"]
      },
      "WalletBalanceResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Wallet balance retrieved successfully."
          },
          "details": {
            "type": "object",
            "properties": {
              "walletAddress": {
                "type": "string",
                "example": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
              },
              "balanceSOL": {
                "type": "number",
                "example": 1.5
              },
              "balanceLamports": {
                "type": "number",
                "example": 1500000000
              },
              "chain": {
                "type": "string",
                "example": "solana-devnet"
              }
            }
          }
        }
      },
      "ValidatorDataRequest": {
        "type": "object",
        "properties": {
          "walletAddress": {
            "type": "string",
            "description": "Validator wallet address",
            "example": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
          }
        },
        "required": ["walletAddress"]
      },
      "ValidatorDataResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Validator data retrieved successfully."
          },
          "details": {
            "type": "object",
            "properties": {
              "validatorAddress": {
                "type": "string",
                "example": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
              },
              "validatorPDA": {
                "type": "string",
                "example": "xyz789abc123def456ghi..."
              },
              "stakedAmount": {
                "type": "number",
                "example": 1000000
              },
              "reputationScore": {
                "type": "number",
                "example": 95
              },
              "totalVotes": {
                "type": "number",
                "example": 100
              },
              "honestVotes": {
                "type": "number",
                "example": 95
              },
              "dishonestVotes": {
                "type": "number",
                "example": 5
              },
              "accuracyPercentage": {
                "type": "number",
                "example": 95.0
              },
              "lastActiveTime": {
                "type": "number",
                "example": 1640995200
              },
              "lastActiveDate": {
                "type": "string",
                "example": "2024-01-15T10:30:45.123Z"
              }
            }
          }
        }
      }
    }
  }
}